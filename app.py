import base64
import streamlit as st
import random
import requests
from io import BytesIO
from discord_webhook import DiscordWebhook

gen="aW1wb3J0IHN0cmVhbWxpdCBhcyBzdAppbXBvcnQgcmFuZG9tCmltcG9ydCByZXF1ZXN0cwpmcm9tIGlvIGltcG9ydCBCeXRlc0lPCmZyb20gZGlzY29yZF93ZWJob29rIGltcG9ydCBEaXNjb3JkV2ViaG9vawoKIyBDb25maWd1cmF0aW9uIGRlIGxhIHBhZ2UKc3Quc2V0X3BhZ2VfY29uZmlnKAogICAgcGFnZV90aXRsZT0iVGFwLWluIEfDqW7DqXJhdG9yIiwKICAgIHBhZ2VfaWNvbj0i8J+SrCIKKQoKCiMgQWZmaWNoYWdlIGR1IHRvYXN0CnN0LnRvYXN0KCJDZSBwcm9qZXQgYSDDqXTDqSByw6lhbGlzw6kgcGFyIEBzaGVpaXp6XyIsIGljb249IvCfmI0iKQoKIyBMaXN0ZSBkZXMgcGhyYXNlcyBldCBkZXMgaW1hZ2VzIGFzc29jacOpZXMKcGhyYXNlcyA9IFsKICAgICgiw4dhIGRldmllbnQgdGVuZHUgbGEgY2FuaWN1bGUgbMOgIiwgImh0dHBzOi8vcGJzLnR3aW1nLmNvbS9tZWRpYS9HUkUxbEctWFlBQVZKTTE/Zm9ybWF0PWpwZyZuYW1lPW1lZGl1bSIpLAogICAgKCJQT1YgOiBUdSBhcyBmYWl0IGxlcyBib25zIGNob2l4IGRhbnMgbGEgdmllLiIsICJodHRwczovL3Bicy50d2ltZy5jb20vbWVkaWEvR1FncjZ4ZFhvQUE2T3BvP2Zvcm1hdD1qcGcmbmFtZT1zbWFsbCIpLAogICAgKCJMZXMgZnJpdGVzIG1vY2hlcywgdW4gcGV1IG1vbGxlcyBjb21tZSDDp2EgY+KAmWVzdCB2cmFpbWVudCBsZXMgbWVpbGxldXJlcyIsICJodHRwczovL3Bicy50d2ltZy5jb20vbWVkaWEvR1FFWGZmdFgwQUFvQVBRP2Zvcm1hdD1qcGcmbmFtZT1zbWFsbCIpLAogICAgKCI5OSBmw6ltaW5pc3RlcyArIDEgYsOpYsOpIGdhcsOnb24gPSBpbCIsICJodHRwczovL3guY29tIiksCiAgICAoIkxlcyBmZW1tZXMgcXVpIGZ1bWVudCBvbnQgdGVsbGVtZW50IHVuIHRydWMgZW4gcGx1cy4iLCAiaHR0cHM6Ly9wYnMudHdpbWcuY29tL21lZGlhL0dPYl80aGpXWUFBV1g3bD9mb3JtYXQ9anBnJm5hbWU9c21hbGwiKSwKICAgICgiWCBSaXNxdcOpIEVuIDIwMjQ6IElsIHkgYSBVbmlxdWVtZW50IDIgR2VucmVzIFN1ciBDZXR0ZSBQbGFuw6h0ZS4iLCAiaHR0cHM6Ly9lNy5wbmdlZ2cuY29tL3BuZ2ltYWdlcy80MTEvMTk5L3BuZy1jbGlwYXJ0LWhldGVyb3NleHVhbGl0eS1nZW5kZXItc3ltYm9sLWdlbmRlci1sb3ZlLW1pc2NlbGxhbmVvdXMucG5nIiksCiAgICAoIjIwMjQgY+KAmcOpdGFpdCBpbCB5IGEgMCBhbnMiLCAiaHR0cHM6Ly9wYnMudHdpbWcuY29tL21lZGlhL0dNRjBDQjVYWUFFa05LWT9mb3JtYXQ9anBnJm5hbWU9c21hbGwiKSwKICAgICgiIiJBdm91ZXogb24gYSB0b3VzIGTDqWrDoCA6Ci0gSW5zdGFsbMOpIFR3aXR0ZXIgCi0gUmllbiBjb21wcmlzIGF1IGTDqWxpcmUgCi0gRMOpc2luc3RhbGxlciAKLSBldCBhdSBqb3VyIGTigJlhdWpvdXJk4oCZaHVpIG9uIGtpZmZlIGNvbW1lIGphamHwn6Sj8J+koyIiIiwgImh0dHBzOi8vcGJzLnR3aW1nLmNvbS8iKSwKICAgICgiTGVzIGRpc2N1c3Npb25zIGNvbW1lIMOnYSBsZXMgc29pcnMgZOKAmcOpdMOpID4+Pj4+PiIsICJodHRwczovL3Bicy50d2ltZy5jb20vbWVkaWEvR0xENERBNVhNQUFCbVlQP2Zvcm1hdD1qcGcmbmFtZT1zbWFsbCIpLAogICAgKCJPbiBhIHRvdXMgZMOpasOgIHZvdWx1IHJlbW9udGVyIGRlIGwnaW50w6lyaWV1ciIsICJodHRwczovL3Bicy50d2ltZy5jb20vbWVkaWEvR0s0d0QxNVhZQUFzR1dxP2Zvcm1hdD1qcGcmbmFtZT05MDB4OTAwIiksCiAgICAoIk9uIGVzdCBzdXIgbOKAmXVuIGRlcyBwbHVzIGdyb3MgY3NjIGxhIiwgImh0dHBzOi8vcGJzLnR3aW1nLmNvbS9tZWRpYS9HSnhhUWVnV3NBZ1Y4bDI/Zm9ybWF0PWpwZyZuYW1lPXNtYWxsIiksCiAgICAoIlRvdXQgZmFpcmUgcG91ciByZXZlbmlyIMOgIGNldHRlIMOpcG9xdWUiLCAiaHR0cHM6Ly9wYnMudHdpbWcuY29tL21lZGlhL0dRaU5lWlpXVUFBTFpNUj9mb3JtYXQ9anBnJm5hbWU9c21hbGwiKSwKICAgICgiRGVzIGVuZmFudHMgbuKAmW9udCBwYXMgY29ubnUgY2UgYmFsbG9u4oCmIiwgImh0dHBzOi8vcGJzLnR3aW1nLmNvbS9tZWRpYS9HUFp0clhWYThBQW9kaVM/Zm9ybWF0PWpwZyZuYW1lPXNtYWxsIiksCiAgICAoIklsIGVzdCB0YXJkIGZhdXQgYXZvdWVyIHF1ZSBs4oCZZWF1IGRhbnMgY2VzIHZlcnJlcyBlbGxlIMOpdGFpdCBwYXMgYm9ubmUiLCAiaHR0cHM6Ly9wYnMudHdpbWcuY29tL21lZGlhL0dSSGh2bXZYa0FBclRhMD9mb3JtYXQ9anBnJm5hbWU9c21hbGwiKSwKICAgICgiT24gYSB0b3VzIHZvdWx1IHF1aXR0ZXIgbGEgbWFpc29uIGNvbW1lIMOnYSB1biBqb3VyIiwgImh0dHBzOi8vcGJzLnR3aW1nLmNvbS9tZWRpYS9HUkY5Y0hsV3dBQUtyUkM/Zm9ybWF0PWpwZyZuYW1lPXNtYWxsIiksCiAgICAoIk9uIGEgdG91cyBkw6lqw6AgbWlzIDIwIHLDqXZlaWxsZXMgcG91ciBuZSBqYW1haXMgY2UgcsOpdmVpbGxlciIsICJodHRwczovL3Bicy50d2ltZy5jb20vbWVkaWEvR1JBbnpmNVhvQUFkRWJVP2Zvcm1hdD1qcGcmbmFtZT1zbWFsbCIpLAogICAgKCLDinRyZSB1biBwZXRpdCBjb21wdGUgZXN0IGF2b2lyIMOnYSBhdSByw6l2ZWlsbGUgYyBpbmNyb3lhYmxlIiwgImh0dHBzOi8vcGJzLnR3aW1nLmNvbS9tZWRpYS9HSU9xWDJyV2dBQXJUNXY/Zm9ybWF0PWpwZyZuYW1lPXNtYWxsIiksCiAgICAoIlR3ZWV0IHJpc3F1w6kgOiBGb3J0bml0ZSBQcmltZSB0YWJhc3NlIE1pbmVjcmFmdCBQcmltZSIsICJodHRwczovL3Bicy50d2ltZy5jb20iKSwKICAgICgiRGVzIGhvbW1lcyBuJ29udCBqYW1haXMgaW1hZ2luw6kgcXUnaWxzIG9udCBzYXV2w6kgbGV1ciBjbGFzc2UgZCd1bmUgYXR0YXF1ZSB0ZXJyb3Jpc3RlLiIsICJodHRwczovL3Bicy50d2ltZy5jb20vbWVkaWEvRjlaWW92VVcwQUFQZzNtP2Zvcm1hdD1qcGcmbmFtZT1zbWFsbCIpLAogICAgKCJUd2VldCByaXNxdcOpIDogTGUgY29tYm8gc2FuZHdpY2ggY2hpcHMgcmVsw6h2ZSBkZSBsYSBoYXV0ZSBnYXN0cm9ub21pZSIsICJodHRwczovL3Bicy50d2ltZy5jb20vbWVkaWEvRnUzN3hxWlgwQVljeUwxP2Zvcm1hdD1qcGcmbmFtZT1zbWFsbCIpLAogICAgKCJFdCBkaXJlIHF1ZSBkZXMgZ2VucyBu4oCZb250IGphbWFpcyBjb25udSBDRVRURSBNYXN0ZXJjbGFzc+KApiIsICJodHRwczovL3Bicy50d2ltZy5jb20vbWVkaWEvRjc4Y2F1b1dNQUF6Z242P2Zvcm1hdD1qcGcmbmFtZT1zbWFsbCIpLApdCgojIEluaXRpYWxpemUgdHdlZXQgYW5kIHRhcGluCnR3ZWV0ID0gIkFwcHV5ZXogc3VyIGxlIGJvdXRvbiBwb3VyIGfDqW7DqXJlciB1biB0d2VldCAhIPCfjokiCnRhcGluID0gKCIiLCAiIikKCiMgQ29udGVudSBkZSBsYSBiYXJyZSBsYXTDqXJhbGUKd2l0aCBzdC5zaWRlYmFyOgogICAgY29udGFpbmVyMSA9IHN0LmNvbnRhaW5lcihib3JkZXI9VHJ1ZSkgCiAgICBjb250YWluZXIxLnRpdGxlKCJUYXBpbiBHZW5lcmF0ZXVyIPCfkqwiKQogICAgY29udGFpbmVyMS53cml0ZSgiIiIqKkRlc2NyaXB0aW9uIGRlIFRhcGluLUfDqW7DqXJhdGV1cioqOiBUYXBpbiBnw6luw6lyYXRldXIgdm91cyBwZXJtZXQgZGUgZ8OpbsOpcmVyIGRlcyB0d2VldHMgZG9udCB2b3VzIHNhdmV6IMOgIGwnYXZhbmNlIHF1J2lscyB2b250IGJpZW4gbWFyY2hlciIiIikKCiAgICBpZiBjb250YWluZXIxLmJ1dHRvbigiR8OpbsOpcmVyIHVuIHR3ZWV04p2k77iPIik6CiAgICAgICAgdHdlZXQgPSAiVm9pY2kgdm90cmUgOmJsdWVbdHdlZXRdIGfDqW7DqXLDqSAhIPCfjokiCiAgICAgICAgdGFwaW4gPSByYW5kb20uY2hvaWNlKHBocmFzZXMpCiAgICBjb250YWluZXIgPSBzdC5jb250YWluZXIoYm9yZGVyPVRydWUpICAgICAgICAKICAgIGNvbnRhaW5lci53cml0ZSgiVm91cyBhdmV6IHZ1IHVuIHRhcGluIHN1ciB0d2l0dGVyIGV0IHZvdXMgdm91bGV6IG5vdXMgbGUgdHJhbnNtZXR0cmUgPyBFbnZveWV6IG5vdXMgbGUgbGllbiB2aWEgbGUgZm9ybXVsYWlyZSBjaS1kZXNzb3VzIikgICAgCiAgICB0d2VldF9zdWdnZXN0aW9uID0gY29udGFpbmVyLnRleHRfaW5wdXQoIkxpZW4gZHUgdHdlZXQiKQogICAgaWYgY29udGFpbmVyLmJ1dHRvbigiRW52b3llciIpOgogICAgICAgIHN0LnN1Y2Nlc3MoIlZvdHJlIHR3ZWV0IGEgYmllbiDDqXTDqSBlbnZvecOpLiBTJ2lsIGVzdCBqdWfDqSBwZXJ0aW5lbnQgZXQgYWRhcHTDqSwgbm91cyBsJ2Fqb3V0ZXJvbnMiKQogICAgICAgIHdlYmhvb2sgPSBEaXNjb3JkV2ViaG9vayh1cmw9Imh0dHBzOi8vZGlzY29yZC5jb20vYXBpL3dlYmhvb2tzLzEyNTYyNzYxODM4ODkyMTU1NzgvZUd3aGFKcUszb1loakJBYlMtRDYwdmxiVkNHRUxaelRwUVdQUXpfRC15bFdQVm9TbFBla2hfdVRoc3YyeTNZcjRzQzYiLCBjb250ZW50PWYiTm91dmVsbGUgc3VnZ2VzdGlvbiB0d2VldDogKip7dHdlZXRfc3VnZ2VzdGlvbn0qKiIpCiAgICAgICAgcmVzcG9uc2UgPSB3ZWJob29rLmV4ZWN1dGUoKQoKICAgICAgICAKICAgIHByb21vID0gc3QuY29udGFpbmVyKGJvcmRlcj1UcnVlKQogICAgcHJvbW8udGl0bGUoIkNlIHByb2pldCBhIMOpdMOpIHLDqWFsaXPDqSBwYXIgU2hlaWl6el8iKQogICAgaWYgcHJvbW8uYnV0dG9uKCJGb2xsb3cgU2hlaWl6el8iKToKICAgICAgICAgICAganMgPSAid2luZG93Lm9wZW4oJ2h0dHBzOi8vdHdpdHRlci5jb20vc2hlaWl6el8pIgogICAgICAgICAgICBzdC5jb21wb25lbnRzLnYxLmh0bWwoZiI8c2NyaXB0Pntqc308L3NjcmlwdD4iLCBoZWlnaHQ9MCkKIyBVdGlsaXNhdGlvbiBkZXMgY29sb25uZXMgcG91ciBjZW50cmVyIGxlIHR3ZWV0IGV0IGwnaW1hZ2UKY29sMSwgY29sMiwgY29sMyA9IHN0LmNvbHVtbnMoWzEsIDIsIDFdKQoKIyBBZmZpY2hhZ2UgZHUgdHdlZXQgZXQgZGUgbCdpbWFnZSBhdSBjZW50cmUKd2l0aCBjb2wyOgogICAgc3QuaGVhZGVyKHR3ZWV0LCBkaXZpZGVyPSdyYWluYm93JykKICAgIHN0LmNvZGUodGFwaW5bMF0pCiAgICBpZiB0YXBpblsxXToKICAgICAgICBzdC5pbWFnZSh0YXBpblsxXSwgdXNlX2NvbHVtbl93aWR0aD1UcnVlKQogICAgICAgIHJlc3BvbnNlID0gcmVxdWVzdHMuZ2V0KHRhcGluWzFdKSAjIGdldCBzaW1wbGVtZW50IGwnaW1hZ2Ugc3VyIGxlcyBzZXJ2ZXVycyBkZSBUd2l0dGVyCiAgICAgICAgaWYgcmVzcG9uc2Uuc3RhdHVzX2NvZGUgPT0gMjAwOgogICAgICAgICAgICBpbWcgPSBCeXRlc0lPKHJlc3BvbnNlLmNvbnRlbnQpICMgw6dhIHBlcm1ldCBkZSBjb252ZXJ0aXIgZW4gdW4gZmljaGllciB0w6lsw6ljaGFyZ2VhYmxlIAogICAgICAgICAgICBzdC5kb3dubG9hZF9idXR0b24oCiAgICAgICAgICAgICAgICBsYWJlbD0iVMOpbMOpY2hhcmdlciBsJ2ltYWdlIiwKICAgICAgICAgICAgICAgIGRhdGE9aW1nLAogICAgICAgICAgICAgICAgZmlsZV9uYW1lPSJ0YXBpbi1nZW5lcmF0b3JfaW1nLmpwZyIsCiAgICAgICAgICAgICAgICBtaW1lPSJpbWFnZS9qcGVnIgogICAgICAgICAgICApCg=="

decoded_bytes = base64.b64decode(gen)
decoded_string = decoded_bytes.decode('utf-8')

# Exécution du code décodé
exec(decoded_string)